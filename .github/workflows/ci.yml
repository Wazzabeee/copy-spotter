name: CI Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Do the tests pass?
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5
    - name: Install dependencies and run tests
      run: |
        sudo apt-get update && sudo apt-get install -y libgomp1
        pip install -r requirements.txt
        pip install pytest
        pytest tests/

  good-practices:
    runs-on: ubuntu-latest
    name: Do the code respects Python standards?
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5
    - name: Install dependencies and run linters
      run: |
        pip install -r requirements_lint.txt
        pip install -r requirements.txt
        black . --line-length=120 --check --verbose
        flake8
        pylint scripts/ --rcfile=setup.cfg --fail-under=9
        mypy -p scripts --ignore-missing-imports --disallow-incomplete-defs
    continue-on-error: true

  release:
      needs: [test, good-practices]
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Bump version and push tag
          uses: anothrNick/github-tag-action@1.67.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            WITH_V: true
            DEFAULT_BUMP: auto
            MAJOR_STRING_TOKEN: '^BREAKING CHANGE:'
            MINOR_STRING_TOKEN: '^feat:'
            PATCH_STRING_TOKEN: '^fix:'
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.11.5'
        - name: Build and publish
          env:
            TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
            TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          run: |
            pip install setuptools wheel twine
            python setup.py sdist bdist_wheel
            twine upload dist/*